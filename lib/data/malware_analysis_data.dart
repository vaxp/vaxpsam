// lib/data/malware_analysis_data.dart


import 'package:vaxpsam/domain/malware_tool.dart';

class MalwareAnalysisData {
  // قائمة الحزم الكاملة لـ APT (23 حزمة)
  static const List<String> kAllToolPackages = [
    'radare2',
    'gdb',
    'binwalk',
    'clamav',
    'strace',
    'ltrace',
    'python3',
    'gcc',
    'file',
    'binutils', // يغطي Strings, Objdump, Readelf
    'foremost',
    'chkrootkit',
    'rkhunter',
    'unzip',
    'tar',
    'sleuthkit',
    'testdisk',
    'autopsy',
    'xxd',
    'bsdmainutils', // يغطي Hexdump
    'gzip', // يغطي Gzip/Bzip2
    'libimobiledevice',
    'android-tools-adb',
  ];

  // قائمة الأدوات للعرض في الشبكة (25 أداة)
  static const List<MalwareTool> kMalwareTools = [
    MalwareTool(
      name: 'Radare2 (r2)',
      package: 'radare2',
      description: 'Powerful reverse engineering framework',
    ),
    MalwareTool(
      name: 'GDB',
      package: 'gdb',
      description: 'Basic debugger for runtime analysis',
    ),
    MalwareTool(
      name: 'Binwalk',
      package: 'binwalk',
      description: 'Analyzes binary files, especially firmware',
    ),
    MalwareTool(
      name: 'ClamAV',
      package: 'clamav',
      description: 'Open-source virus scanning engine',
    ),
    MalwareTool(
      name: 'Strace',
      package: 'strace',
      description: 'Traces system calls',
    ),
    MalwareTool(
      name: 'Ltrace',
      package: 'ltrace',
      description: 'Traces user library calls',
    ),
    MalwareTool(
      name: 'Python',
      package: 'python3',
      description: 'Basic programming language for automating analysis',
    ),
    MalwareTool(
      name: 'GCC',
      package: 'gcc',
      description: 'Compiler for compiling code and tools',
    ),
    MalwareTool(
      name: 'File',
      package: 'file',
      description: 'Determines file type',
    ),
    MalwareTool(
      name: 'Strings',
      package: 'binutils',
      description: 'Extracts printable text from binary files',
    ),
    MalwareTool(
      name: 'Objdump',
      package: 'binutils',
      description: 'Displays information about executable files',
    ),
    MalwareTool(
      name: 'Readelf',
      package: 'binutils',
      description: 'Displays information about ELF files',
    ),
    MalwareTool(
      name: 'Foremost',
      package: 'foremost',
      description: 'File recovery tool, useful for analyzing evidence',
    ),
    MalwareTool(
      name: 'Chkrootkit',
      package: 'chkrootkit',
      description: 'Rootkits detection tool',
    ),
    MalwareTool(
      name: 'Rkhunter',
      package: 'rkhunter',
      description: 'Rootkits and malware detection tool',
    ),
    MalwareTool(
      name: 'Unzip',
      package: 'unzip',
      description: 'Unzip tool for decompressing suspicious content',
    ),
    MalwareTool(
      name: 'Tar',
      package: 'tar',
      description: 'Toolkit for handling file archives',
    ),
    MalwareTool(
      name: 'Sleuth Kit',
      package: 'sleuthkit',
      description: 'Digital forensics toolkit',
    ),
    MalwareTool(
      name: 'TestDisk',
      package: 'testdisk',
      description: 'Hard disk partition recovery tool',
    ),
    MalwareTool(
      name: 'Autopsy',
      package: 'autopsy',
      description: 'Graphical interface for Sleuth Kit',
    ),
    MalwareTool(
      name: 'Xxd',
      package: 'xxd',
      description: 'Create a hexadecimal (Hex Dump) view of a file',
    ),
    MalwareTool(
      name: 'Hexdump',
      package: 'bsdmainutils',
      description: 'Display file contents in hexadecimal format',
    ),
    MalwareTool(
      name: 'Gzip/Bzip2',
      package: 'gzip',
      description: 'Compressing and decompressing files',
    ),
    MalwareTool(
      name: 'Libimobiledevice',
      package: 'libimobiledevice',
      description: 'Analyzes iOS devices (behavioral analysis)',
    ),
    MalwareTool(
      name: 'Adb',
      package: 'android-tools-adb',
      description:
          'Android debugging bridge (for analyzing application behavior)',
    ),
  ];
}